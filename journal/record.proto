syntax = "proto3";
package veracity.journal.v1;

import "github.com/dogmatiq/interopspec/envelopespec/envelope.proto";

option go_package = "github.com/dogmatiq/veracity/journal";

// RecordContainer is a container for a record. It the singular Protocol Buffers
// message type that is appended to the journal's underlying log.
message RecordContainer {
    oneof elem {
        CommandEnqueued command_enqueued = 1;
        CommandHandledByAggregate command_handled_by_aggregate = 2;
        CommandHandledByIntegration command_handled_by_integration = 3;
        EventHandledByProcess event_handled_by_process = 4;
        TimeoutHandledByProcess timeout_handled_by_process = 5;
    }
}

message CommandEnqueued {
    dogma.interop.v1.envelope.Envelope Envelope = 1;
}

message AggregateInstance {
    string id = 1;
    bool destroyed = 2;
}

message CommandHandledByAggregate {
    dogma.interop.v1.envelope.Identity handler = 1;
    string message_id = 2;
    AggregateInstance instance = 3;
    repeated dogma.interop.v1.envelope.Envelope events = 4;
}

message CommandHandledByIntegration {
    dogma.interop.v1.envelope.Identity handler = 1;
    string message_id = 2;
    repeated dogma.interop.v1.envelope.Envelope events = 3;
}

message ProcessInstance {
    string id = 1;
    bool ended = 2;
    string media_type = 3;
    bytes data = 4;
}

message EventHandledByProcess {
    dogma.interop.v1.envelope.Identity handler = 1;
    dogma.interop.v1.envelope.Identity source_application = 2;
    uint64 source_offset = 3;
    ProcessInstance instance = 4;
    repeated dogma.interop.v1.envelope.Envelope commands = 5;
    repeated dogma.interop.v1.envelope.Envelope timeouts = 6;
}

message TimeoutHandledByProcess {
    dogma.interop.v1.envelope.Identity handler = 1;
    string message_id = 2;
    ProcessInstance instance = 3;
    repeated dogma.interop.v1.envelope.Envelope commands = 4;
    repeated dogma.interop.v1.envelope.Envelope timeouts = 5;
}
