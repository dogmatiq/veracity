// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/dogmatiq/veracity/journal/record.proto

package journal

import (
	envelopespec "github.com/dogmatiq/interopspec/envelopespec"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Elem:
	//	*RecordContainer_ExecutorExecuteCommand
	//	*RecordContainer_AggregateHandleCommand
	//	*RecordContainer_IntegrationHandleCommand
	//	*RecordContainer_ProcessHandleEvent
	//	*RecordContainer_ProcessHandleTimeout
	Elem isRecordContainer_Elem `protobuf_oneof:"elem"`
}

func (x *RecordContainer) Reset() {
	*x = RecordContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordContainer) ProtoMessage() {}

func (x *RecordContainer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordContainer.ProtoReflect.Descriptor instead.
func (*RecordContainer) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{0}
}

func (m *RecordContainer) GetElem() isRecordContainer_Elem {
	if m != nil {
		return m.Elem
	}
	return nil
}

func (x *RecordContainer) GetExecutorExecuteCommand() *ExecutorExecuteCommand {
	if x, ok := x.GetElem().(*RecordContainer_ExecutorExecuteCommand); ok {
		return x.ExecutorExecuteCommand
	}
	return nil
}

func (x *RecordContainer) GetAggregateHandleCommand() *AggregateHandleCommand {
	if x, ok := x.GetElem().(*RecordContainer_AggregateHandleCommand); ok {
		return x.AggregateHandleCommand
	}
	return nil
}

func (x *RecordContainer) GetIntegrationHandleCommand() *IntegrationHandleCommand {
	if x, ok := x.GetElem().(*RecordContainer_IntegrationHandleCommand); ok {
		return x.IntegrationHandleCommand
	}
	return nil
}

func (x *RecordContainer) GetProcessHandleEvent() *ProcessHandleEvent {
	if x, ok := x.GetElem().(*RecordContainer_ProcessHandleEvent); ok {
		return x.ProcessHandleEvent
	}
	return nil
}

func (x *RecordContainer) GetProcessHandleTimeout() *ProcessHandleTimeout {
	if x, ok := x.GetElem().(*RecordContainer_ProcessHandleTimeout); ok {
		return x.ProcessHandleTimeout
	}
	return nil
}

type isRecordContainer_Elem interface {
	isRecordContainer_Elem()
}

type RecordContainer_ExecutorExecuteCommand struct {
	ExecutorExecuteCommand *ExecutorExecuteCommand `protobuf:"bytes,2,opt,name=executor_execute_command,json=executorExecuteCommand,proto3,oneof"`
}

type RecordContainer_AggregateHandleCommand struct {
	AggregateHandleCommand *AggregateHandleCommand `protobuf:"bytes,3,opt,name=aggregate_handle_command,json=aggregateHandleCommand,proto3,oneof"`
}

type RecordContainer_IntegrationHandleCommand struct {
	IntegrationHandleCommand *IntegrationHandleCommand `protobuf:"bytes,4,opt,name=integration_handle_command,json=integrationHandleCommand,proto3,oneof"`
}

type RecordContainer_ProcessHandleEvent struct {
	ProcessHandleEvent *ProcessHandleEvent `protobuf:"bytes,5,opt,name=process_handle_event,json=processHandleEvent,proto3,oneof"`
}

type RecordContainer_ProcessHandleTimeout struct {
	ProcessHandleTimeout *ProcessHandleTimeout `protobuf:"bytes,6,opt,name=process_handle_timeout,json=processHandleTimeout,proto3,oneof"`
}

func (*RecordContainer_ExecutorExecuteCommand) isRecordContainer_Elem() {}

func (*RecordContainer_AggregateHandleCommand) isRecordContainer_Elem() {}

func (*RecordContainer_IntegrationHandleCommand) isRecordContainer_Elem() {}

func (*RecordContainer_ProcessHandleEvent) isRecordContainer_Elem() {}

func (*RecordContainer_ProcessHandleTimeout) isRecordContainer_Elem() {}

type ExecutorExecuteCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envelope *envelopespec.Envelope `protobuf:"bytes,1,opt,name=Envelope,proto3" json:"Envelope,omitempty"`
}

func (x *ExecutorExecuteCommand) Reset() {
	*x = ExecutorExecuteCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutorExecuteCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorExecuteCommand) ProtoMessage() {}

func (x *ExecutorExecuteCommand) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorExecuteCommand.ProtoReflect.Descriptor instead.
func (*ExecutorExecuteCommand) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{1}
}

func (x *ExecutorExecuteCommand) GetEnvelope() *envelopespec.Envelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

type AggregateHandleCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string                   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Handler   *envelopespec.Identity   `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
	Instance  *AggregateInstance       `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	Events    []*envelopespec.Envelope `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *AggregateHandleCommand) Reset() {
	*x = AggregateHandleCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateHandleCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateHandleCommand) ProtoMessage() {}

func (x *AggregateHandleCommand) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateHandleCommand.ProtoReflect.Descriptor instead.
func (*AggregateHandleCommand) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{2}
}

func (x *AggregateHandleCommand) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *AggregateHandleCommand) GetHandler() *envelopespec.Identity {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *AggregateHandleCommand) GetInstance() *AggregateInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *AggregateHandleCommand) GetEvents() []*envelopespec.Envelope {
	if x != nil {
		return x.Events
	}
	return nil
}

type IntegrationHandleCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string                   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Handler   *envelopespec.Identity   `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
	Events    []*envelopespec.Envelope `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *IntegrationHandleCommand) Reset() {
	*x = IntegrationHandleCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationHandleCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationHandleCommand) ProtoMessage() {}

func (x *IntegrationHandleCommand) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationHandleCommand.ProtoReflect.Descriptor instead.
func (*IntegrationHandleCommand) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{3}
}

func (x *IntegrationHandleCommand) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *IntegrationHandleCommand) GetHandler() *envelopespec.Identity {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *IntegrationHandleCommand) GetEvents() []*envelopespec.Envelope {
	if x != nil {
		return x.Events
	}
	return nil
}

type ProcessHandleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceApplication *envelopespec.Identity   `protobuf:"bytes,1,opt,name=source_application,json=sourceApplication,proto3" json:"source_application,omitempty"`
	SourceOffset      uint64                   `protobuf:"varint,2,opt,name=source_offset,json=sourceOffset,proto3" json:"source_offset,omitempty"`
	Handler           *envelopespec.Identity   `protobuf:"bytes,3,opt,name=handler,proto3" json:"handler,omitempty"`
	Instance          *ProcessInstance         `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
	Commands          []*envelopespec.Envelope `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`
	Timeouts          []*envelopespec.Envelope `protobuf:"bytes,6,rep,name=timeouts,proto3" json:"timeouts,omitempty"`
}

func (x *ProcessHandleEvent) Reset() {
	*x = ProcessHandleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessHandleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHandleEvent) ProtoMessage() {}

func (x *ProcessHandleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHandleEvent.ProtoReflect.Descriptor instead.
func (*ProcessHandleEvent) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessHandleEvent) GetSourceApplication() *envelopespec.Identity {
	if x != nil {
		return x.SourceApplication
	}
	return nil
}

func (x *ProcessHandleEvent) GetSourceOffset() uint64 {
	if x != nil {
		return x.SourceOffset
	}
	return 0
}

func (x *ProcessHandleEvent) GetHandler() *envelopespec.Identity {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *ProcessHandleEvent) GetInstance() *ProcessInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *ProcessHandleEvent) GetCommands() []*envelopespec.Envelope {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *ProcessHandleEvent) GetTimeouts() []*envelopespec.Envelope {
	if x != nil {
		return x.Timeouts
	}
	return nil
}

type ProcessHandleTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string                   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Handler   *envelopespec.Identity   `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
	Instance  *ProcessInstance         `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
	Commands  []*envelopespec.Envelope `protobuf:"bytes,7,rep,name=commands,proto3" json:"commands,omitempty"`
	Timeouts  []*envelopespec.Envelope `protobuf:"bytes,8,rep,name=timeouts,proto3" json:"timeouts,omitempty"`
}

func (x *ProcessHandleTimeout) Reset() {
	*x = ProcessHandleTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessHandleTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHandleTimeout) ProtoMessage() {}

func (x *ProcessHandleTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHandleTimeout.ProtoReflect.Descriptor instead.
func (*ProcessHandleTimeout) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessHandleTimeout) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ProcessHandleTimeout) GetHandler() *envelopespec.Identity {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *ProcessHandleTimeout) GetInstance() *ProcessInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *ProcessHandleTimeout) GetCommands() []*envelopespec.Envelope {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *ProcessHandleTimeout) GetTimeouts() []*envelopespec.Envelope {
	if x != nil {
		return x.Timeouts
	}
	return nil
}

type AggregateInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Revision  uint64 `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	Destroyed bool   `protobuf:"varint,3,opt,name=destroyed,proto3" json:"destroyed,omitempty"`
}

func (x *AggregateInstance) Reset() {
	*x = AggregateInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateInstance) ProtoMessage() {}

func (x *AggregateInstance) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateInstance.ProtoReflect.Descriptor instead.
func (*AggregateInstance) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{6}
}

func (x *AggregateInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AggregateInstance) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *AggregateInstance) GetDestroyed() bool {
	if x != nil {
		return x.Destroyed
	}
	return false
}

type ProcessInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Revision  uint64 `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	Ended     bool   `protobuf:"varint,3,opt,name=ended,proto3" json:"ended,omitempty"`
	MediaType string `protobuf:"bytes,4,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProcessInstance) Reset() {
	*x = ProcessInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInstance) ProtoMessage() {}

func (x *ProcessInstance) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInstance.ProtoReflect.Descriptor instead.
func (*ProcessInstance) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcessInstance) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *ProcessInstance) GetEnded() bool {
	if x != nil {
		return x.Ended
	}
	return false
}

func (x *ProcessInstance) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *ProcessInstance) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_github_com_dogmatiq_veracity_journal_record_proto protoreflect.FileDescriptor

var file_github_com_dogmatiq_veracity_journal_record_proto_rawDesc = []byte{
	0x0a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67,
	0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6f, 0x70, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x04, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x67, 0x0a, 0x18, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x65,
	0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x16, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x67, 0x0a, 0x18, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x16, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x1a, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x5b, 0x0a, 0x14, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x48, 0x00, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x65, 0x6c,
	0x65, 0x6d, 0x22, 0x59, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x08,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x52, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0xf7, 0x01,
	0x0a, 0x16, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67,
	0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x90, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x3d, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x40,
	0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x3f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x12, 0x3f, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f,
	0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x65,
	0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x22, 0x5d, 0x0a,
	0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x65, 0x64, 0x22, 0x86, 0x01, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x76, 0x65, 0x72,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_dogmatiq_veracity_journal_record_proto_rawDescOnce sync.Once
	file_github_com_dogmatiq_veracity_journal_record_proto_rawDescData = file_github_com_dogmatiq_veracity_journal_record_proto_rawDesc
)

func file_github_com_dogmatiq_veracity_journal_record_proto_rawDescGZIP() []byte {
	file_github_com_dogmatiq_veracity_journal_record_proto_rawDescOnce.Do(func() {
		file_github_com_dogmatiq_veracity_journal_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_dogmatiq_veracity_journal_record_proto_rawDescData)
	})
	return file_github_com_dogmatiq_veracity_journal_record_proto_rawDescData
}

var file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_github_com_dogmatiq_veracity_journal_record_proto_goTypes = []interface{}{
	(*RecordContainer)(nil),          // 0: veracity.journal.v1.RecordContainer
	(*ExecutorExecuteCommand)(nil),   // 1: veracity.journal.v1.ExecutorExecuteCommand
	(*AggregateHandleCommand)(nil),   // 2: veracity.journal.v1.AggregateHandleCommand
	(*IntegrationHandleCommand)(nil), // 3: veracity.journal.v1.IntegrationHandleCommand
	(*ProcessHandleEvent)(nil),       // 4: veracity.journal.v1.ProcessHandleEvent
	(*ProcessHandleTimeout)(nil),     // 5: veracity.journal.v1.ProcessHandleTimeout
	(*AggregateInstance)(nil),        // 6: veracity.journal.v1.AggregateInstance
	(*ProcessInstance)(nil),          // 7: veracity.journal.v1.ProcessInstance
	(*envelopespec.Envelope)(nil),    // 8: dogma.interop.v1.envelope.Envelope
	(*envelopespec.Identity)(nil),    // 9: dogma.interop.v1.envelope.Identity
}
var file_github_com_dogmatiq_veracity_journal_record_proto_depIdxs = []int32{
	1,  // 0: veracity.journal.v1.RecordContainer.executor_execute_command:type_name -> veracity.journal.v1.ExecutorExecuteCommand
	2,  // 1: veracity.journal.v1.RecordContainer.aggregate_handle_command:type_name -> veracity.journal.v1.AggregateHandleCommand
	3,  // 2: veracity.journal.v1.RecordContainer.integration_handle_command:type_name -> veracity.journal.v1.IntegrationHandleCommand
	4,  // 3: veracity.journal.v1.RecordContainer.process_handle_event:type_name -> veracity.journal.v1.ProcessHandleEvent
	5,  // 4: veracity.journal.v1.RecordContainer.process_handle_timeout:type_name -> veracity.journal.v1.ProcessHandleTimeout
	8,  // 5: veracity.journal.v1.ExecutorExecuteCommand.Envelope:type_name -> dogma.interop.v1.envelope.Envelope
	9,  // 6: veracity.journal.v1.AggregateHandleCommand.handler:type_name -> dogma.interop.v1.envelope.Identity
	6,  // 7: veracity.journal.v1.AggregateHandleCommand.instance:type_name -> veracity.journal.v1.AggregateInstance
	8,  // 8: veracity.journal.v1.AggregateHandleCommand.events:type_name -> dogma.interop.v1.envelope.Envelope
	9,  // 9: veracity.journal.v1.IntegrationHandleCommand.handler:type_name -> dogma.interop.v1.envelope.Identity
	8,  // 10: veracity.journal.v1.IntegrationHandleCommand.events:type_name -> dogma.interop.v1.envelope.Envelope
	9,  // 11: veracity.journal.v1.ProcessHandleEvent.source_application:type_name -> dogma.interop.v1.envelope.Identity
	9,  // 12: veracity.journal.v1.ProcessHandleEvent.handler:type_name -> dogma.interop.v1.envelope.Identity
	7,  // 13: veracity.journal.v1.ProcessHandleEvent.instance:type_name -> veracity.journal.v1.ProcessInstance
	8,  // 14: veracity.journal.v1.ProcessHandleEvent.commands:type_name -> dogma.interop.v1.envelope.Envelope
	8,  // 15: veracity.journal.v1.ProcessHandleEvent.timeouts:type_name -> dogma.interop.v1.envelope.Envelope
	9,  // 16: veracity.journal.v1.ProcessHandleTimeout.handler:type_name -> dogma.interop.v1.envelope.Identity
	7,  // 17: veracity.journal.v1.ProcessHandleTimeout.instance:type_name -> veracity.journal.v1.ProcessInstance
	8,  // 18: veracity.journal.v1.ProcessHandleTimeout.commands:type_name -> dogma.interop.v1.envelope.Envelope
	8,  // 19: veracity.journal.v1.ProcessHandleTimeout.timeouts:type_name -> dogma.interop.v1.envelope.Envelope
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_github_com_dogmatiq_veracity_journal_record_proto_init() }
func file_github_com_dogmatiq_veracity_journal_record_proto_init() {
	if File_github_com_dogmatiq_veracity_journal_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutorExecuteCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateHandleCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationHandleCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessHandleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessHandleTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RecordContainer_ExecutorExecuteCommand)(nil),
		(*RecordContainer_AggregateHandleCommand)(nil),
		(*RecordContainer_IntegrationHandleCommand)(nil),
		(*RecordContainer_ProcessHandleEvent)(nil),
		(*RecordContainer_ProcessHandleTimeout)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_dogmatiq_veracity_journal_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_dogmatiq_veracity_journal_record_proto_goTypes,
		DependencyIndexes: file_github_com_dogmatiq_veracity_journal_record_proto_depIdxs,
		MessageInfos:      file_github_com_dogmatiq_veracity_journal_record_proto_msgTypes,
	}.Build()
	File_github_com_dogmatiq_veracity_journal_record_proto = out.File
	file_github_com_dogmatiq_veracity_journal_record_proto_rawDesc = nil
	file_github_com_dogmatiq_veracity_journal_record_proto_goTypes = nil
	file_github_com_dogmatiq_veracity_journal_record_proto_depIdxs = nil
}
