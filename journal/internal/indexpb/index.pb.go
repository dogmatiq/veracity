// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/dogmatiq/veracity/journal/internal/indexpb/index.proto

package indexpb

import (
	envelopespec "github.com/dogmatiq/interopspec/envelopespec"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetaData contains information about index itself.
type MetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CommittedRecordId is the ID of the last journal record that was fully
	// committed to the index.
	CommittedRecordId []byte `protobuf:"bytes,1,opt,name=committed_record_id,json=committedRecordId,proto3" json:"committed_record_id,omitempty"`
	// QueueHeadMessageId is the ID of the message at the start of the queue.
	QueueHeadMessageId string `protobuf:"bytes,2,opt,name=queue_head_message_id,json=queueHeadMessageId,proto3" json:"queue_head_message_id,omitempty"`
	// QueueTailMessageId is the ID of the message at the end of the queue.
	QueueTailMessageId string `protobuf:"bytes,3,opt,name=queue_tail_message_id,json=queueTailMessageId,proto3" json:"queue_tail_message_id,omitempty"`
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescGZIP(), []int{0}
}

func (x *MetaData) GetCommittedRecordId() []byte {
	if x != nil {
		return x.CommittedRecordId
	}
	return nil
}

func (x *MetaData) GetQueueHeadMessageId() string {
	if x != nil {
		return x.QueueHeadMessageId
	}
	return ""
}

func (x *MetaData) GetQueueTailMessageId() string {
	if x != nil {
		return x.QueueTailMessageId
	}
	return ""
}

// QueueNode is a list node containing a message on the queue, which is
// implemented as a doubly-linked list.
type QueueNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextMessageId string                 `protobuf:"bytes,1,opt,name=next_message_id,json=nextMessageId,proto3" json:"next_message_id,omitempty"`
	PrevMessageId string                 `protobuf:"bytes,2,opt,name=prev_message_id,json=prevMessageId,proto3" json:"prev_message_id,omitempty"`
	Envelope      *envelopespec.Envelope `protobuf:"bytes,3,opt,name=Envelope,proto3" json:"Envelope,omitempty"`
}

func (x *QueueNode) Reset() {
	*x = QueueNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueNode) ProtoMessage() {}

func (x *QueueNode) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueNode.ProtoReflect.Descriptor instead.
func (*QueueNode) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescGZIP(), []int{1}
}

func (x *QueueNode) GetNextMessageId() string {
	if x != nil {
		return x.NextMessageId
	}
	return ""
}

func (x *QueueNode) GetPrevMessageId() string {
	if x != nil {
		return x.PrevMessageId
	}
	return ""
}

func (x *QueueNode) GetEnvelope() *envelopespec.Envelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

var File_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto protoreflect.FileDescriptor

var file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDesc = []byte{
	0x0a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67,
	0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6f, 0x70, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x73, 0x70, 0x65, 0x63, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x71, 0x75, 0x65, 0x75, 0x65, 0x48, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x08, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x76, 0x65, 0x72,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescOnce sync.Once
	file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescData = file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDesc
)

func file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescGZIP() []byte {
	file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescOnce.Do(func() {
		file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescData)
	})
	return file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDescData
}

var file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_goTypes = []interface{}{
	(*MetaData)(nil),              // 0: veracity.index.v1.MetaData
	(*QueueNode)(nil),             // 1: veracity.index.v1.QueueNode
	(*envelopespec.Envelope)(nil), // 2: dogma.interop.v1.envelope.Envelope
}
var file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_depIdxs = []int32{
	2, // 0: veracity.index.v1.QueueNode.Envelope:type_name -> dogma.interop.v1.envelope.Envelope
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_init() }
func file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_init() {
	if File_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_goTypes,
		DependencyIndexes: file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_depIdxs,
		MessageInfos:      file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_msgTypes,
	}.Build()
	File_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto = out.File
	file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_rawDesc = nil
	file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_goTypes = nil
	file_github_com_dogmatiq_veracity_journal_internal_indexpb_index_proto_depIdxs = nil
}
