// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/dogmatiq/veracity/persistence/record/record.proto

package record

import (
	envelopespec "github.com/dogmatiq/interopspec/envelopespec"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Op:
	//	*Record_EnqueueCommand
	//	*Record_MarkCommandAsHandledByAggregate
	//	*Record_MarkCommandAsHandledByIntegration
	//	*Record_DeferCommandDueToError
	Op isRecord_Op `protobuf_oneof:"op"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescGZIP(), []int{0}
}

func (m *Record) GetOp() isRecord_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *Record) GetEnqueueCommand() *EnqueueCommand {
	if x, ok := x.GetOp().(*Record_EnqueueCommand); ok {
		return x.EnqueueCommand
	}
	return nil
}

func (x *Record) GetMarkCommandAsHandledByAggregate() *MarkCommandAsHandledByAggregate {
	if x, ok := x.GetOp().(*Record_MarkCommandAsHandledByAggregate); ok {
		return x.MarkCommandAsHandledByAggregate
	}
	return nil
}

func (x *Record) GetMarkCommandAsHandledByIntegration() *MarkCommandAsHandledByIntegration {
	if x, ok := x.GetOp().(*Record_MarkCommandAsHandledByIntegration); ok {
		return x.MarkCommandAsHandledByIntegration
	}
	return nil
}

func (x *Record) GetDeferCommandDueToError() *DeferCommandDueToError {
	if x, ok := x.GetOp().(*Record_DeferCommandDueToError); ok {
		return x.DeferCommandDueToError
	}
	return nil
}

type isRecord_Op interface {
	isRecord_Op()
}

type Record_EnqueueCommand struct {
	EnqueueCommand *EnqueueCommand `protobuf:"bytes,1,opt,name=enqueue_command,json=enqueueCommand,proto3,oneof"`
}

type Record_MarkCommandAsHandledByAggregate struct {
	MarkCommandAsHandledByAggregate *MarkCommandAsHandledByAggregate `protobuf:"bytes,2,opt,name=mark_command_as_handled_by_aggregate,json=markCommandAsHandledByAggregate,proto3,oneof"`
}

type Record_MarkCommandAsHandledByIntegration struct {
	MarkCommandAsHandledByIntegration *MarkCommandAsHandledByIntegration `protobuf:"bytes,3,opt,name=mark_command_as_handled_by_integration,json=markCommandAsHandledByIntegration,proto3,oneof"`
}

type Record_DeferCommandDueToError struct {
	DeferCommandDueToError *DeferCommandDueToError `protobuf:"bytes,4,opt,name=defer_command_due_to_error,json=deferCommandDueToError,proto3,oneof"`
}

func (*Record_EnqueueCommand) isRecord_Op() {}

func (*Record_MarkCommandAsHandledByAggregate) isRecord_Op() {}

func (*Record_MarkCommandAsHandledByIntegration) isRecord_Op() {}

func (*Record_DeferCommandDueToError) isRecord_Op() {}

type EnqueueCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envelope *envelopespec.Envelope `protobuf:"bytes,1,opt,name=Envelope,proto3" json:"Envelope,omitempty"`
}

func (x *EnqueueCommand) Reset() {
	*x = EnqueueCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueCommand) ProtoMessage() {}

func (x *EnqueueCommand) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueCommand.ProtoReflect.Descriptor instead.
func (*EnqueueCommand) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescGZIP(), []int{1}
}

func (x *EnqueueCommand) GetEnvelope() *envelopespec.Envelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

type MarkCommandAsHandledByAggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId  string                   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Handler    []*envelopespec.Identity `protobuf:"bytes,2,rep,name=handler,proto3" json:"handler,omitempty"`
	Events     []*envelopespec.Envelope `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	InstanceId string                   `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Revision   uint64                   `protobuf:"varint,5,opt,name=revision,proto3" json:"revision,omitempty"`
	Destroyed  bool                     `protobuf:"varint,6,opt,name=destroyed,proto3" json:"destroyed,omitempty"`
}

func (x *MarkCommandAsHandledByAggregate) Reset() {
	*x = MarkCommandAsHandledByAggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkCommandAsHandledByAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkCommandAsHandledByAggregate) ProtoMessage() {}

func (x *MarkCommandAsHandledByAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkCommandAsHandledByAggregate.ProtoReflect.Descriptor instead.
func (*MarkCommandAsHandledByAggregate) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescGZIP(), []int{2}
}

func (x *MarkCommandAsHandledByAggregate) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MarkCommandAsHandledByAggregate) GetHandler() []*envelopespec.Identity {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *MarkCommandAsHandledByAggregate) GetEvents() []*envelopespec.Envelope {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *MarkCommandAsHandledByAggregate) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *MarkCommandAsHandledByAggregate) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *MarkCommandAsHandledByAggregate) GetDestroyed() bool {
	if x != nil {
		return x.Destroyed
	}
	return false
}

type MarkCommandAsHandledByIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string                   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Handler   []*envelopespec.Identity `protobuf:"bytes,2,rep,name=handler,proto3" json:"handler,omitempty"`
	Events    []*envelopespec.Envelope `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *MarkCommandAsHandledByIntegration) Reset() {
	*x = MarkCommandAsHandledByIntegration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkCommandAsHandledByIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkCommandAsHandledByIntegration) ProtoMessage() {}

func (x *MarkCommandAsHandledByIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkCommandAsHandledByIntegration.ProtoReflect.Descriptor instead.
func (*MarkCommandAsHandledByIntegration) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescGZIP(), []int{3}
}

func (x *MarkCommandAsHandledByIntegration) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MarkCommandAsHandledByIntegration) GetHandler() []*envelopespec.Identity {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *MarkCommandAsHandledByIntegration) GetEvents() []*envelopespec.Envelope {
	if x != nil {
		return x.Events
	}
	return nil
}

type DeferCommandDueToError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId     string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	NextAttemptAt string `protobuf:"bytes,4,opt,name=next_attempt_at,json=nextAttemptAt,proto3" json:"next_attempt_at,omitempty"`
}

func (x *DeferCommandDueToError) Reset() {
	*x = DeferCommandDueToError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferCommandDueToError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferCommandDueToError) ProtoMessage() {}

func (x *DeferCommandDueToError) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferCommandDueToError.ProtoReflect.Descriptor instead.
func (*DeferCommandDueToError) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescGZIP(), []int{4}
}

func (x *DeferCommandDueToError) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *DeferCommandDueToError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeferCommandDueToError) GetNextAttemptAt() string {
	if x != nil {
		return x.NextAttemptAt
	}
	return ""
}

var File_github_com_dogmatiq_veracity_persistence_record_record_proto protoreflect.FileDescriptor

var file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67,
	0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x1a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x70, 0x65, 0x63,
	0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdb, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x4d, 0x0a, 0x0f, 0x65, 0x6e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x6e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x24, 0x6d, 0x61,
	0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x73, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x64, 0x42, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x1f, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x12, 0x8a, 0x01, 0x0a, 0x26, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x5f, 0x61, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x41, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x21, 0x6d, 0x61, 0x72, 0x6b,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a,
	0x1a, 0x64, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x64,
	0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x44, 0x75, 0x65, 0x54, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x16, 0x64, 0x65, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x75, 0x65,
	0x54, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x70, 0x22, 0x51, 0x0a,
	0x0e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x3f, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x22, 0x97, 0x02, 0x0a, 0x1f, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x41, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x65, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x21, 0x4d,
	0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x64, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x16,
	0x44, 0x65, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x75, 0x65, 0x54,
	0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x41, 0x74, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescOnce sync.Once
	file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescData = file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDesc
)

func file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescGZIP() []byte {
	file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescOnce.Do(func() {
		file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescData)
	})
	return file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDescData
}

var file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_dogmatiq_veracity_persistence_record_record_proto_goTypes = []interface{}{
	(*Record)(nil),                            // 0: veracity.record.v1.Record
	(*EnqueueCommand)(nil),                    // 1: veracity.record.v1.EnqueueCommand
	(*MarkCommandAsHandledByAggregate)(nil),   // 2: veracity.record.v1.MarkCommandAsHandledByAggregate
	(*MarkCommandAsHandledByIntegration)(nil), // 3: veracity.record.v1.MarkCommandAsHandledByIntegration
	(*DeferCommandDueToError)(nil),            // 4: veracity.record.v1.DeferCommandDueToError
	(*envelopespec.Envelope)(nil),             // 5: dogma.interop.v1.envelope.Envelope
	(*envelopespec.Identity)(nil),             // 6: dogma.interop.v1.envelope.Identity
}
var file_github_com_dogmatiq_veracity_persistence_record_record_proto_depIdxs = []int32{
	1, // 0: veracity.record.v1.Record.enqueue_command:type_name -> veracity.record.v1.EnqueueCommand
	2, // 1: veracity.record.v1.Record.mark_command_as_handled_by_aggregate:type_name -> veracity.record.v1.MarkCommandAsHandledByAggregate
	3, // 2: veracity.record.v1.Record.mark_command_as_handled_by_integration:type_name -> veracity.record.v1.MarkCommandAsHandledByIntegration
	4, // 3: veracity.record.v1.Record.defer_command_due_to_error:type_name -> veracity.record.v1.DeferCommandDueToError
	5, // 4: veracity.record.v1.EnqueueCommand.Envelope:type_name -> dogma.interop.v1.envelope.Envelope
	6, // 5: veracity.record.v1.MarkCommandAsHandledByAggregate.handler:type_name -> dogma.interop.v1.envelope.Identity
	5, // 6: veracity.record.v1.MarkCommandAsHandledByAggregate.events:type_name -> dogma.interop.v1.envelope.Envelope
	6, // 7: veracity.record.v1.MarkCommandAsHandledByIntegration.handler:type_name -> dogma.interop.v1.envelope.Identity
	5, // 8: veracity.record.v1.MarkCommandAsHandledByIntegration.events:type_name -> dogma.interop.v1.envelope.Envelope
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_github_com_dogmatiq_veracity_persistence_record_record_proto_init() }
func file_github_com_dogmatiq_veracity_persistence_record_record_proto_init() {
	if File_github_com_dogmatiq_veracity_persistence_record_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkCommandAsHandledByAggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkCommandAsHandledByIntegration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeferCommandDueToError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Record_EnqueueCommand)(nil),
		(*Record_MarkCommandAsHandledByAggregate)(nil),
		(*Record_MarkCommandAsHandledByIntegration)(nil),
		(*Record_DeferCommandDueToError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_dogmatiq_veracity_persistence_record_record_proto_goTypes,
		DependencyIndexes: file_github_com_dogmatiq_veracity_persistence_record_record_proto_depIdxs,
		MessageInfos:      file_github_com_dogmatiq_veracity_persistence_record_record_proto_msgTypes,
	}.Build()
	File_github_com_dogmatiq_veracity_persistence_record_record_proto = out.File
	file_github_com_dogmatiq_veracity_persistence_record_record_proto_rawDesc = nil
	file_github_com_dogmatiq_veracity_persistence_record_record_proto_goTypes = nil
	file_github_com_dogmatiq_veracity_persistence_record_record_proto_depIdxs = nil
}
