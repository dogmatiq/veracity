// Code generated by protoc-gen-go-primo. DO NOT EDIT.
// versions:
// 	protoc-gen-go-primo v
// 	protoc              v4.24.4
// source: github.com/dogmatiq/veracity/internal/eventstream/internal/journalpb/record.proto

package journalpb

import envelopepb "github.com/dogmatiq/enginekit/protobuf/envelopepb"

// NewRecord returns a new [Record].
func NewRecord() *Record {
	return &Record{}
}

// NewEventsAppended returns a new [EventsAppended].
func NewEventsAppended() *EventsAppended {
	return &EventsAppended{}
}

// Switch_Record_Operation dispatches to one of the given functions based on
// which value of the [Record] message's "Operation" one-of group is populated.
//
// It panics if x.Operation field is nil; otherwise, it returns the value
// returned by the called function. If no return value is required, use a return
// type of [error] and always return nil.
func Switch_Record_Operation[T any](
	x *Record,
	caseEventsAppended func(*EventsAppended) T,
) T {
	switch v := x.Operation.(type) {
	case *Record_EventsAppended:
		return caseEventsAppended(v.EventsAppended)
	default:
		panic("Switch_Record_Operation: x.Operation is nil")
	}
}

// SetStreamOffsetBefore sets the x.StreamOffsetBefore field to v, then returns x.
func (x *Record) SetStreamOffsetBefore(v uint64) *Record {
	if x == nil {
		x = &Record{}
	}
	x.StreamOffsetBefore = v
	return x
}

// SetStreamOffsetAfter sets the x.StreamOffsetAfter field to v, then returns x.
func (x *Record) SetStreamOffsetAfter(v uint64) *Record {
	if x == nil {
		x = &Record{}
	}
	x.StreamOffsetAfter = v
	return x
}

// SetEventsAppended sets the x.Operation field to a [Operation] value containing v, then returns x.
func (x *Record) SetEventsAppended(v *EventsAppended) *Record {
	if x == nil {
		x = &Record{}
	}
	x.Operation = &Record_EventsAppended{EventsAppended: v}
	return x
}

// SetEvents sets the x.Events field to v, then returns x.
func (x *EventsAppended) SetEvents(v []*envelopepb.Envelope) *EventsAppended {
	if x == nil {
		x = &EventsAppended{}
	}
	x.Events = v
	return x
}
