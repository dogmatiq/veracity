// Code generated by protoc-gen-go-primo. DO NOT EDIT.
// versions:
// 	protoc-gen-go-primo v
// 	protoc              v4.24.2
// source: github.com/dogmatiq/veracity/internal/integration/internal/journalpb/record.proto

package journalpb

// SetCommandEnqueued sets x.OneOf to a [Record_CommandEnqueued] value.
func (x *Record) SetCommandEnqueued(v *CommandEnqueued) {
	x.OneOf = &Record_CommandEnqueued{CommandEnqueued: v}
}

// SetCommandHandled sets x.OneOf to a [Record_CommandHandled] value.
func (x *Record) SetCommandHandled(v *CommandHandled) {
	x.OneOf = &Record_CommandHandled{CommandHandled: v}
}

// SetCommandHandlerFailed sets x.OneOf to a [Record_CommandHandlerFailed] value.
func (x *Record) SetCommandHandlerFailed(v *CommandHandlerFailed) {
	x.OneOf = &Record_CommandHandlerFailed{CommandHandlerFailed: v}
}

// SetEventsAppendedToStream sets x.OneOf to a [Record_EventsAppendedToStream] value.
func (x *Record) SetEventsAppendedToStream(v *EventsAppendedToStream) {
	x.OneOf = &Record_EventsAppendedToStream{EventsAppendedToStream: v}
}
func (x *Record) DispatchOneOf(
	commandEnqueued func(*CommandEnqueued),
	commandHandled func(*CommandHandled),
	commandHandlerFailed func(*CommandHandlerFailed),
	eventsAppendedToStream func(*EventsAppendedToStream),
	other func(),
) {
	switch v := x.GetOneOf().(type) {
	case *Record_CommandEnqueued:
		commandEnqueued(v.CommandEnqueued)
	case *Record_CommandHandled:
		commandHandled(v.CommandHandled)
	case *Record_CommandHandlerFailed:
		commandHandlerFailed(v.CommandHandlerFailed)
	case *Record_EventsAppendedToStream:
		eventsAppendedToStream(v.EventsAppendedToStream)
	default:
		other()
	}
}
