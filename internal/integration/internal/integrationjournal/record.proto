syntax = "proto3";
package veracity.integration.journal.v1;

option go_package = "github.com/dogmatiq/veracity/internal/integration/internal/integrationjournal";

import "github.com/dogmatiq/enginekit/protobuf/uuidpb/uuid.proto";
import "github.com/dogmatiq/enginekit/protobuf/envelopepb/envelope.proto";

// Record is a journal record that stores an operation that was performed by an
// integration supervisor.
message Record {
  oneof operation {
    CommandEnqueued command_enqueued = 1;
    CommandHandled command_handled = 2;
    EventsAppendedToStream events_appended_to_stream = 3;
  }
}

// CommandEnqueued is an operation that indicates a command has been enqueued
// for handling.
message CommandEnqueued {
  // Command is the envelope containing the command to be handled.
  dogma.protobuf.Envelope command = 1;
}

// CommandHandled is an operation that indicates a command has been handled
// successfully.
message CommandHandled {
  // CommandId is the ID of the command that was handled.
  dogma.protobuf.UUID command_id = 1;

  // Events is the list of events produced while handling the command, in
  // chronological order.
  repeated dogma.protobuf.Envelope events = 2;

  // EventStreamId is the ID of the stream to which the events will be appended.
  dogma.protobuf.UUID event_stream_id = 3;

  // LowestPossibleEventOffset is the next offset of the stream, at the time it
  // was selected.
  uint64 lowest_possible_event_offset = 4;
}

// EventsAppendedToStream is an operation that indicates that the events
// produced by a specific command have been appended to an event stream.
message EventsAppendedToStream {
  // CommandId is the ID of the command that produced the events.
  dogma.protobuf.UUID command_id = 1;

  // EventStreamId is the ID of the stream to which the events were appended.
  dogma.protobuf.UUID event_stream_id = 2;

  // EventOffset is the offset of the first event.
  uint64 event_offset = 3;
}
